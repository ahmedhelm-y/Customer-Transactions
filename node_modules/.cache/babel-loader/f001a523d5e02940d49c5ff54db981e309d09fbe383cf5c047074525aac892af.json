{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CompuMarts\\\\Downloads\\\\Compressed\\\\RouteTask-master\\\\src\\\\Components\\\\TransactionChart\\\\TransactionChart.jsx\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TransactionChart({\n  transactions\n}) {\n  let data = transactions.reduce((acc, transaction) => {\n    let date = transaction.date;\n    let existing = acc.find(item => item.date === date);\n\n    // Check for the date to calculate the total amount for the day\n    if (existing) {\n      existing.amount += transaction.amount;\n    } else {\n      acc.push({\n        date,\n        amount: transaction.amount\n      });\n    }\n    return acc;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      width: 600,\n      height: 300,\n      data: data,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"amount\",\n        fill: \"#1cc79fc5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = TransactionChart;\nvar _c;\n$RefreshReg$(_c, \"TransactionChart\");","map":{"version":3,"names":["BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionChart","transactions","data","reduce","acc","transaction","date","existing","find","item","amount","push","children","width","height","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","fill","_c","$RefreshReg$"],"sources":["C:/Users/CompuMarts/Downloads/Compressed/RouteTask-master/src/Components/TransactionChart/TransactionChart.jsx"],"sourcesContent":["\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nexport default function TransactionChart({ transactions }) {\n\n    let data = transactions.reduce((acc, transaction) => {\n\n        let date = transaction.date;\n        let existing = acc.find(item => item.date === date);\n\n        // Check for the date to calculate the total amount for the day\n        if (existing) {\n            existing.amount += transaction.amount;\n        } else {\n            acc.push({ date, amount: transaction.amount });\n        }\n\n        return acc;\n    }, []);\n\n\n    return <>\n            <BarChart\n                width={600}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"amount\" fill=\"#1cc79fc5\" />\n            </BarChart>\n    </>\n}"],"mappings":";AACA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvF,eAAe,SAASC,gBAAgBA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAEvD,IAAIC,IAAI,GAAGD,YAAY,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,WAAW,KAAK;IAEjD,IAAIC,IAAI,GAAGD,WAAW,CAACC,IAAI;IAC3B,IAAIC,QAAQ,GAAGH,GAAG,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACH,IAAI,KAAKA,IAAI,CAAC;;IAEnD;IACA,IAAIC,QAAQ,EAAE;MACVA,QAAQ,CAACG,MAAM,IAAIL,WAAW,CAACK,MAAM;IACzC,CAAC,MAAM;MACHN,GAAG,CAACO,IAAI,CAAC;QAAEL,IAAI;QAAEI,MAAM,EAAEL,WAAW,CAACK;MAAO,CAAC,CAAC;IAClD;IAEA,OAAON,GAAG;EACd,CAAC,EAAE,EAAE,CAAC;EAGN,oBAAOP,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACCf,OAAA,CAACR,QAAQ;MACLwB,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZZ,IAAI,EAAEA,IAAK;MACXa,MAAM,EAAE;QACJC,GAAG,EAAE,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,MAAM,EAAE;MACzC,CAAE;MAAAP,QAAA,gBAEFf,OAAA,CAACJ,aAAa;QAAC2B,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvC3B,OAAA,CAACN,KAAK;QAACkC,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxB3B,OAAA,CAACL,KAAK;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACT3B,OAAA,CAACH,OAAO;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX3B,OAAA,CAACF,MAAM;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV3B,OAAA,CAACP,GAAG;QAACmC,OAAO,EAAC,QAAQ;QAACC,IAAI,EAAC;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC;EAAC,gBACjB,CAAC;AACP;AAACG,EAAA,GAnCuB3B,gBAAgB;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}