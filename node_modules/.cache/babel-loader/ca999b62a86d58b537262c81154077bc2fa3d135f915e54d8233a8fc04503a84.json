{"ast":null,"code":"import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend}from'recharts';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function TransactionChart(_ref){let{transactions}=_ref;let data=transactions.reduce((acc,transaction)=>{let date=transaction.date;let existing=acc.find(item=>item.date===date);// Check for the date to calculate the total amount for the day\nif(existing){existing.amount+=transaction.amount;}else{acc.push({date,amount:transaction.amount});}return acc;},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(BarChart,{width:600,height:300,data:data,margin:{top:5,right:30,left:20,bottom:5},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"date\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"amount\",fill:\"#1cc79fc5\"})]})});}","map":{"version":3,"names":["BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TransactionChart","_ref","transactions","data","reduce","acc","transaction","date","existing","find","item","amount","push","children","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill"],"sources":["C:/Users/CompuMarts/Downloads/Compressed/RouteTask-master/src/Components/TransactionChart/TransactionChart.jsx"],"sourcesContent":["\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nexport default function TransactionChart({ transactions }) {\n\n    let data = transactions.reduce((acc, transaction) => {\n\n        let date = transaction.date;\n        let existing = acc.find(item => item.date === date);\n\n        // Check for the date to calculate the total amount for the day\n        if (existing) {\n            existing.amount += transaction.amount;\n        } else {\n            acc.push({ date, amount: transaction.amount });\n        }\n\n        return acc;\n    }, []);\n\n\n    return <>\n            <BarChart\n                width={600}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"amount\" fill=\"#1cc79fc5\" />\n            </BarChart>\n    </>\n}"],"mappings":"AACA,OAASA,QAAQ,CAAEC,GAAG,CAAEC,KAAK,CAAEC,KAAK,CAAEC,aAAa,CAAEC,OAAO,CAAEC,MAAM,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEvF,cAAe,SAAS,CAAAC,gBAAgBA,CAAAC,IAAA,CAAmB,IAAlB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CAErD,GAAI,CAAAE,IAAI,CAAGD,YAAY,CAACE,MAAM,CAAC,CAACC,GAAG,CAAEC,WAAW,GAAK,CAEjD,GAAI,CAAAC,IAAI,CAAGD,WAAW,CAACC,IAAI,CAC3B,GAAI,CAAAC,QAAQ,CAAGH,GAAG,CAACI,IAAI,CAACC,IAAI,EAAIA,IAAI,CAACH,IAAI,GAAKA,IAAI,CAAC,CAEnD;AACA,GAAIC,QAAQ,CAAE,CACVA,QAAQ,CAACG,MAAM,EAAIL,WAAW,CAACK,MAAM,CACzC,CAAC,IAAM,CACHN,GAAG,CAACO,IAAI,CAAC,CAAEL,IAAI,CAAEI,MAAM,CAAEL,WAAW,CAACK,MAAO,CAAC,CAAC,CAClD,CAEA,MAAO,CAAAN,GAAG,CACd,CAAC,CAAE,EAAE,CAAC,CAGN,mBAAOV,IAAA,CAAAI,SAAA,EAAAc,QAAA,cACChB,KAAA,CAACV,QAAQ,EACL2B,KAAK,CAAE,GAAI,CACXC,MAAM,CAAE,GAAI,CACZZ,IAAI,CAAEA,IAAK,CACXa,MAAM,CAAE,CACJC,GAAG,CAAE,CAAC,CAAEC,KAAK,CAAE,EAAE,CAAEC,IAAI,CAAE,EAAE,CAAEC,MAAM,CAAE,CACzC,CAAE,CAAAP,QAAA,eAEFlB,IAAA,CAACJ,aAAa,EAAC8B,eAAe,CAAC,KAAK,CAAE,CAAC,cACvC1B,IAAA,CAACN,KAAK,EAACiC,OAAO,CAAC,MAAM,CAAE,CAAC,cACxB3B,IAAA,CAACL,KAAK,GAAE,CAAC,cACTK,IAAA,CAACH,OAAO,GAAE,CAAC,cACXG,IAAA,CAACF,MAAM,GAAE,CAAC,cACVE,IAAA,CAACP,GAAG,EAACkC,OAAO,CAAC,QAAQ,CAACC,IAAI,CAAC,WAAW,CAAE,CAAC,EACnC,CAAC,CACjB,CAAC,CACP","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}